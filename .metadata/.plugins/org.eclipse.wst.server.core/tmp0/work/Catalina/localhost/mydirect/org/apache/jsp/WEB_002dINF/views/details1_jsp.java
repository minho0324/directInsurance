/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-19 06:10:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class details1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/i/Desktop/다이렉트/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/directClone/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1636952155469L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>details1</title>\r\n");
      out.write("</head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/details1.css\" >\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 헤더 -->\r\n");
      out.write("	<div class=\"headerform\">\r\n");
      out.write("		<div class=\"header\">\r\n");
      out.write("			<div class=\"title\">\r\n");
      out.write("				<a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\">\r\n");
      out.write("					<img src=\"../resources/img/logo02.png\">\r\n");
      out.write("				</a>\r\n");
      out.write("				<div class=\"progress_bar page-header\">\r\n");
      out.write("					<div class=\"progress_bar_inner \">\r\n");
      out.write("						<p>1. 상세 정보 입력 및 동의</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("		<a href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" class=\"btn_close\"></a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 헤더 끝 -->\r\n");
      out.write("		\r\n");
      out.write("		<!-- 컨테이너 본문 시작 -->\r\n");
      out.write("		<div class=\"container clfix container-fluid\">\r\n");
      out.write("			<div class=\"contents\">\r\n");
      out.write("				<div class=\"phone_mail\">\r\n");
      out.write("					<div class=\"phone_mail_inner\">\r\n");
      out.write("						<div class=\"mailform form-group\">\r\n");
      out.write("							<h3>이메일주소<span>&nbsp;*</span></h3>\r\n");
      out.write("								<input type=\"text\" id=\"email\" name=\"email\" class=\"email form-control\" placeholder=\"이메일계정\">\r\n");
      out.write("								<span style=\"font-size:8px;\">보험증권 및 약관 전송 시 사용되오니, 정확히 입력해 주세요.</span>\r\n");
      out.write("								<!--  \r\n");
      out.write("								<select name=\"emailSelect\">\r\n");
      out.write("									<option id=\"email\" value=\"gmail\">gmail</option>\r\n");
      out.write("									<option id=\"email\" value=\"naver\">naver</option>\r\n");
      out.write("									<option id=\"email\" value=\"hanmail\">hanmail</option>\r\n");
      out.write("								</select>\r\n");
      out.write("								-->\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"addrform form-group\">\r\n");
      out.write("							<h3>주소<span>&nbsp;*</span></h3>\r\n");
      out.write("								<input type=\"text\" id=\"addr\" name=\"addr\" class=\"addr form-control\" placeholder=\"기본주소\">\r\n");
      out.write("								<input type=\"text\" name=\"addrdetail\" class=\"addrdetail form-control\" placeholder=\"상세주소\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"receiving\">\r\n");
      out.write("					<div class=\"receiving_inner\">\r\n");
      out.write("							<h3>가입서류(증권,약관,상품설명서)를 받으실 방법을 선택해주세요.</h3>\r\n");
      out.write("							<label for=\"receiving\">\r\n");
      out.write("								<input type=\"radio\" id=\"receiving_email\" name=\"receiving\" value=\"text\">\r\n");
      out.write("								문자/이메일\r\n");
      out.write("							</label>\r\n");
      out.write("							<label for=\"receiving\">\r\n");
      out.write("								<input type=\"radio\" id=\"receiving_post\" name=\"receiving\" value=\"post\">\r\n");
      out.write("								우편\r\n");
      out.write("							</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"identification\">\r\n");
      out.write("					<div class=\"identification_inner\">\r\n");
      out.write("							<h3>본 계약의 실제 소유자가 맞습니까?</h3>\r\n");
      out.write("							<label for=\"identification\">\r\n");
      out.write("								<input type=\"radio\" id=\"identification\" name=\"identification\" value=\"Y\">\r\n");
      out.write("								예\r\n");
      out.write("							</label>\r\n");
      out.write("							<label for=\"identification\">\r\n");
      out.write("								<input type=\"radio\" name=\"identification\" value=\"N\">\r\n");
      out.write("								아니오\r\n");
      out.write("							</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"motorcycle\">\r\n");
      out.write("					<div class=\"motorcycle_inner\">\r\n");
      out.write("							<h3>오토바이(50cc미만 포함)을 운전하십니까?</h3>\r\n");
      out.write("							<label for=\"motorcycle\">\r\n");
      out.write("								<input type=\"radio\" id=\"motorcycle\" name=\"motorcycle\" value=\"Y\">\r\n");
      out.write("								예\r\n");
      out.write("							</label>\r\n");
      out.write("							<label for=\"motorcycle\">\r\n");
      out.write("								<input type=\"radio\" name=\"motorcycle\" value=\"N\">\r\n");
      out.write("								아니오\r\n");
      out.write("							</label>\r\n");
      out.write("					</div>	\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"pv\">\r\n");
      out.write("					<div class=\"pv_inner\">\r\n");
      out.write("							<div class=\"pv_detail\">\r\n");
      out.write("								<h3>\r\n");
      out.write("									개인형 이동장치<br>\r\n");
      out.write("									(전동킥보드, 전동휠 등 전동휠체어, 의료용 스쿠터등은 제외합니다)를 사용하십니까?\r\n");
      out.write("								</h3>\r\n");
      out.write("							</div>\r\n");
      out.write("							<label for=\"pv\">\r\n");
      out.write("								<input type=\"radio\" id=\"pv\" name=\"pv\" value=\"Y\">\r\n");
      out.write("								예\r\n");
      out.write("							</label>\r\n");
      out.write("							<label for=\"pv\">\r\n");
      out.write("								<input type=\"radio\" name=\"pv\" value=\"N\">\r\n");
      out.write("								아니오\r\n");
      out.write("							</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"agreement\">\r\n");
      out.write("					<div class=\"agreement_inner\">\r\n");
      out.write("						<div class=\"agreement_detail\">\r\n");
      out.write("							<h3>\r\n");
      out.write("								상기 정보는 보험가입에 중요한 정보이므로 사실대로 알려주셔야 합니다.<br>\r\n");
      out.write("								보험가입 후 직업, 운전형태(자가용, 영업용 등)가 변경되는 경우\r\n");
      out.write("								<br>\r\n");
      out.write("								반드시 고객센터를 통해서 알려주셔야 합니다.\r\n");
      out.write("							</h3>\r\n");
      out.write("						</div>	\r\n");
      out.write("							<label for=\"agreement\">	\r\n");
      out.write("								<input type=\"checkbox\" id=\"agreement\" name=\"agreement\" value=\"agreed\">\r\n");
      out.write("								동의\r\n");
      out.write("							</label>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"finalagree\">\r\n");
      out.write("					<div class=\"finalagree_inner\">\r\n");
      out.write("						<div class=\"finalagree_detail\">\r\n");
      out.write("							<h3>\r\n");
      out.write("								사망보험금 수익자는 <span>법정상속인</span>으로 자동 지정되며<br>\r\n");
      out.write("								보험계약 해지 시 콜센터 서비스를 이용해 주시기 바랍니다.\r\n");
      out.write("							</h3>\r\n");
      out.write("						</div>\r\n");
      out.write("						<label for=\"finalagree\">	\r\n");
      out.write("							<input type=\"checkbox\" id=\"finalagree\" name=\"finalagree\" value=\"agreed\">\r\n");
      out.write("							확인\r\n");
      out.write("						</label>\r\n");
      out.write("						<p>\r\n");
      out.write("						사망보험금 수익자 미지정(법정상속인)계약입니다.<br>\r\n");
      out.write("						사망보험금 수익자 미지정 계약은 피보험자 사망 시<br> 보험수익자인 법정상속인 간 보험금 지급에 관한 분쟁이 발생할 수\r\n");
      out.write("						있습니다. <br>보험수익자 변경을 원하시면 보험계약 체결 후 <span>☎1600-0100</span>으로 연락하시어 안내 받으시기 바랍니다.\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 컨테이너 끝 -->\r\n");
      out.write("		<div class=\"progress_btn\">\r\n");
      out.write("			<button class=\"prev btn btn-danger\">이전</button>\r\n");
      out.write("			<button class=\"next btn btn-warning\">다음</button>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function() {\r\n");
      out.write("			\r\n");
      out.write("			$('.prev').click(function () {\r\n");
      out.write("				location.href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			$('.next').click(function () {\r\n");
      out.write("				if($('#email').val() === '' || $('#addr').val() === '') {\r\n");
      out.write("					alert(\"이메일과 주소는 필수값입니다.\");\r\n");
      out.write("					verifyEmail();\r\n");
      out.write("				}else if(\r\n");
      out.write("					($('#receiving_email').is(':checked') || $('#receiving_post').is(':checked')) && $('#identification').is(':checked') && $('#motorcycle').is(':checked')\r\n");
      out.write("					&& $('#pv').is(':checked') && $('#agreement').is(':checked') && $('#finalagree').is(':checked')) {\r\n");
      out.write("					location.href=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\";\r\n");
      out.write("				}else {\r\n");
      out.write("					alert(\"약관에 모두 동의하세요!\");\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			verifyEmail = function() {\r\n");
      out.write("				  // 이메일 검증 스크립트 작성\r\n");
      out.write("				  var emailVal = $(\"#email\").val();\r\n");
      out.write("				  var regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n");
      out.write("				  // 검증에 사용할 정규식 변수 regExp에 저장\r\n");
      out.write("\r\n");
      out.write("				  if (emailVal.match(regExp) != null) {\r\n");
      out.write("				  \r\n");
      out.write("				  }\r\n");
      out.write("				  else {\r\n");
      out.write("				    alert('메일 주소 양식이 맞지 않습니다.');\r\n");
      out.write("				  }\r\n");
      out.write("				};\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("		});\r\n");
      out.write("	</script>	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/details1.jsp(21,13) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /WEB-INF/views/details1.jsp(32,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/direct/index.jsp");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /WEB-INF/views/details1.jsp(165,19) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/direct/");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f3_reused = false;
    try {
      _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f3.setParent(null);
      // /WEB-INF/views/details1.jsp(175,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f3.setValue("/direct/details2");
      int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
      if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
      _jspx_th_c_005furl_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f3, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f3_reused);
    }
    return false;
  }
}
